% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rawDiag.R
\name{read.raw}
\alias{read.raw}
\alias{XIC,}
\alias{xic}
\title{mass spec reader function}
\usage{
read.raw(
  file,
  mono = if (Sys.info()["sysname"] \%in\% c("Darwin", "Linux")) TRUE else FALSE,
  exe = .rawDiagAssembly(),
  mono_path = "",
  rawDiag = TRUE,
  argv = "qc",
  system2_call = if (Sys.info()["sysname"] == "Windows") TRUE else FALSE,
  method = "thermo",
  ssh = FALSE
)
}
\arguments{
\item{file}{the name of the Thermo Fisher Scietific raw file which the data
are to be read from.}

\item{mono}{a boolean indicates if the mono enviroment should be used.}

\item{exe}{the adapter software; default is set to
\code{file.path(path.package(package = "rawDiag"), "exec/fgcz_raw.exe")}}

\item{mono_path}{define the PATH where the ThermoFisher.CommonCore* dll files
are located; default is \code{""} (empty string) ; no MONO_PATH is set.}

\item{rawDiag}{boolean; if TRUE (default) the output is coerced to an rawDiag object.
if FALSE the function will return all available columns.}

\item{argv}{argument vector for the adapter.}

\item{system2_call}{calles system2 if TRUE; otherwise it uses a pipe.}

\item{method}{the adapter type. default is 'thermo' which read Thermo Fisher Scietific raw files.}

\item{ssh}{boolean, if ssh pipe should be used. defaul is FALSE}
}
\value{
a \code{data.frame}.
}
\description{
this function is a generic adapter function for 
  reading mass spectrometric measurement. It requieres the 
  \href{http://planetorbitrap.com/rawfilereader}{New RawFileReader} dll files
  \itemize{
  \item ThermoFisher.CommonCore.BackgroundSubtraction.dll, 
  \item ThermoFisher.CommonCore.MassPrecisionEstimator.dll 
  \item ThermoFisher.CommonCore.RawFileReader.dll
  }
  be installed on the system. This can be done by using 
  the Global Assembly Cache (GAC) or by setting the
  \code{MONO_PATH} enviroment.
}
\examples{
(rawfile <- file.path(path.package(package = 'rawDiag'), 'extdata', 'sample.raw'))
system.time(RAW <- read.raw(file = rawfile))
dim(RAW)
summary(RAW)
PlotScanFrequency(RAW)

# read all dimensions
dim(RAW)
RAW <- read.raw(file = rawfile, rawDiag = FALSE)
dim(RAW)
\dontrun{
library(parallel)
library(rawDiag)

# consider all raw files of your working dir
rawFileNames <- list.files()[grep("raw$", list.files())]

# read all the meta data using 4 cores
RAW <- mclapply(rawFileNames, read.raw, mc.cores=4)
# as alternative  \code{lapply} instread of \code{mclapply}

# concatenate the list data.frames into one single one
RAW <- plyr::rbind.fill(RAW)

# have fun
PlotMassDistribution(RAW)
 }                                       

}
\references{
\itemize{
\item  \url{http://planetorbitrap.com/rawfilereader}
\item \url{http://www.mono-project.com/docs/advanced/assemblies-and-the-gac/}
}
}
\author{
Christian Panse <cp@fgcz.ethz.ch>, 2017, 2018
}
